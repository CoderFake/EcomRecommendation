version: '3.8'

services:
  web:
    build: .
    restart: always
    ports:
      - "8888:8000"
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000
      "
    depends_on:
      - db
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=True
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASS=${DB_PASS}
      - DB_HOST=db
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - VNPAY_TMN_CODE=${VNPAY_TMN_CODE}
      - VNPAY_HASH_SECRET_KEY=${VNPAY_HASH_SECRET_KEY}
      - CHAT_ID=${CHAT_ID}
      - CL_ID=${CL_ID}
      - CL_API_TOKEN=${CL_API_TOKEN}
      - AES_KEY=${AES_KEY}
    networks:
      - ecom_network

  db:
    image: mysql:8.0
    restart: always
    ports:
      - "8336:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/initdb.d:/docker-entrypoint-initdb.d
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASS}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASS}
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecom_network
networks:
  ecom_network:
    driver: bridge

volumes:
  mysql_data:
  static_volume:
  media_volume: